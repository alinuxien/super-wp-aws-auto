[bastion]
${bastion-dns} ansible_host=${bastion-ip} ansible_ssh_user=${bastion-user} ansible_ssh_private_key_file=${private_key_file} # ${bastion-id}

[webservers]
${webserver1-dns} ansible_host=${webserver1-ip} ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${webservers-user} # ${webserver1-id}
${webserver2-dns} ansible_host=${webserver2-ip}  ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${webservers-user} # ${webserver2-id}

[dbinitiator]
${webserver1-dns} ansible_host=${webserver1-ip} ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${webservers-user} # ${webserver1-id}

[bastion:vars]
ansible_ssh_common_args= '-o StrictHostkeyChecking=no'

[webservers:vars]
ansible_ssh_common_args= '-o ProxyCommand="ssh -i ${private_key_file} -W %h:%p ${bastion-user}@${bastion-ip} -o StrictHostKeyChecking=no" -o StrictHostKeyChecking=no'
ansible_user= ${webservers-user}
ansible_become= yes 

[logstashes]
${logstash1-dns} ansible_host=${logstash1-ip} ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${webservers-user} # ${logstash1-id}
${logstash2-dns} ansible_host=${logstash2-ip}  ansible_ssh_private_key_file=${private_key_file} ansible_ssh_user=${webservers-user} # ${logstash2-id}

[logstashes:vars]
ansible_ssh_common_args= '-o ProxyCommand="ssh -i ${private_key_file} -W %h:%p ${bastion-user}@${bastion-ip} -o StrictHostKeyChecking=no" -o StrictHostKeyChecking=no'
ansible_user= ${webservers-user}
ansible_become= yes 


